version: '3.2'

services:
  rabbitmq:
    image: rabbitmq:3-management
    expose:
      - "15672"
      - "4369"
      - "5671"
      - "25672"
      - "5672"
    ports:
      - "4369:4369"
      - "5671:5671"
      - "25672:25672"
      - "5672:5672"
      - "15672:15672"  
  redis:
    image: redis:4.0
    ports:
      - "6379:6379"
    expose:
      - "6379"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: "redis-server /usr/local/etc/redis/redis.conf"       
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  # swarm mode
  # kafka:
  #   image: wurstmeister/kafka:latest
  #   ports:
  #     - target: 9094
  #       published: 9094
  #       protocol: tcp
  #       mode: host
  #     # - 9092:9092
  #   environment:
  #     HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
  #     KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock  
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    # ports:
    #   - "9092"
    links:
      - zookeeper
    environment:
      # KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 10.32.5.208
      KAFKA_CREATE_TOPICS: "Topic1:1:3,Topic2:1:1:compact"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock      
  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    ports:
      - "9000:9000"
    links:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: zookeeper:2181
      # APPLICATION_SECRET: duoyi
      KM_ARGS: -Djava.net.preferIPv4Stack=true              